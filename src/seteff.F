      subroutine seteff
c set up detector efficiency.
      use COMS
      implicit none
      real*8 defferg_30(30),defferg_618(618),defferg_130(130),
     1 defferg_79(79),defferg_70(70),defferg_241(241),defferg_44(44),
     2 geomeff
      integer ideteff
c
c these efficiencies computed for the npod with Mattingly's eff.i 
c input file modified to use the lanl group structures.
c also f4 tally is multiplied by actual detector volume.
c
c TODO put these in data files instead.
      data defferg_30
     1 /4.01465d-02, 4.24388d-02, 4.51215d-02, 4.95389d-02, 5.83267d-02,
     2  7.46038d-02, 9.92956d-02, 1.26770d-01, 1.46057d-01, 1.68253d-01,
     3  1.88827d-01, 2.16065d-01, 2.44837d-01, 2.66896d-01, 2.80207d-01,
     4  2.90234d-01, 3.00552d-01, 3.10853d-01, 3.20665d-01, 3.31388d-01,
     5  3.43875d-01, 3.53876d-01, 3.61543d-01, 3.85812d-01, 3.97999d-01,
     6  4.01692d-01, 3.95077d-01, 3.12892d-01, 2.46235d-02, 8.18514d-06/
      data defferg_618
     1 /3.54049d-02, 3.55272d-02, 3.64735d-02, 3.53186d-02, 3.57888d-02,
     2  3.49618d-02, 3.53126d-02, 3.54864d-02, 3.57162d-02, 3.62869d-02,
     3  3.68980d-02, 3.70097d-02, 3.64416d-02, 3.69360d-02, 3.67206d-02,
     4  3.72945d-02, 3.84885d-02, 3.67384d-02, 3.76329d-02, 3.83046d-02,
     5  3.75388d-02, 3.69882d-02, 3.74632d-02, 3.78369d-02, 3.86543d-02,
     6  3.78633d-02, 3.90627d-02, 3.84672d-02, 3.97155d-02, 3.99457d-02,
     7  4.07761d-02, 3.96452d-02, 4.05812d-02, 4.05815d-02, 4.02009d-02,
     8  4.15298d-02, 4.17096d-02, 4.13014d-02, 4.19387d-02, 4.18499d-02,
     9  4.17840d-02, 4.18490d-02, 4.20251d-02, 4.12677d-02, 4.14561d-02,
     1  4.16530d-02, 4.30759d-02, 4.26281d-02, 4.32357d-02, 4.39629d-02,
     2  4.35220d-02, 4.37511d-02, 4.42721d-02, 4.36592d-02, 4.35303d-02,
     3  4.48302d-02, 4.42664d-02, 4.43464d-02, 4.46011d-02, 4.59722d-02,
     4  4.56815d-02, 4.65616d-02, 4.57829d-02, 4.65493d-02, 4.81919d-02,
     5  4.71980d-02, 4.68965d-02, 4.73048d-02, 4.79736d-02, 4.79325d-02,
     6  5.04148d-02, 4.98997d-02, 5.03208d-02, 5.13239d-02, 5.04968d-02,
     7  5.07702d-02, 5.03825d-02, 5.05931d-02, 5.06335d-02, 5.04433d-02,
     8  5.09564d-02, 5.29866d-02, 5.43810d-02, 5.39291d-02, 5.50920d-02,
     9  5.53733d-02, 5.59940d-02, 5.73743d-02, 5.94706d-02, 5.88714d-02,
     1  6.19100d-02, 6.21689d-02, 6.46892d-02, 6.69685d-02, 6.59680d-02,
     2  6.65664d-02, 6.88532d-02, 6.97183d-02, 7.03526d-02, 7.29924d-02,
     3  7.03053d-02, 7.02499d-02, 7.23640d-02, 7.24284d-02, 7.42420d-02,
     4  7.55330d-02, 7.64250d-02, 7.77989d-02, 8.12594d-02, 8.49898d-02,
     5  8.24939d-02, 8.27977d-02, 8.51001d-02, 8.43034d-02, 8.67476d-02,
     6  8.58236d-02, 8.73537d-02, 8.87178d-02, 9.05547d-02, 9.13594d-02,
     7  9.20163d-02, 9.35009d-02, 9.29208d-02, 9.31561d-02, 9.56805d-02,
     8  9.59735d-02, 9.81165d-02, 9.86589d-02, 9.89150d-02, 1.02003d-01,
     9  1.02230d-01, 1.03391d-01, 1.06444d-01, 1.08318d-01, 1.11125d-01,
     1  1.13059d-01, 1.09574d-01, 1.10498d-01, 1.12247d-01, 1.13845d-01,
     2  1.17638d-01, 1.19668d-01, 1.21708d-01, 1.22585d-01, 1.27630d-01,
     3  1.29399d-01, 1.31663d-01, 1.32916d-01, 1.36440d-01, 1.38124d-01,
     4  1.39113d-01, 1.42492d-01, 1.43937d-01, 1.46863d-01, 1.49789d-01,
     5  1.52249d-01, 1.55219d-01, 1.58796d-01, 1.60822d-01, 1.62488d-01,
     6  1.67610d-01, 1.70305d-01, 1.72519d-01, 1.73998d-01, 1.77703d-01,
     7  1.80022d-01, 1.82162d-01, 1.86111d-01, 1.86950d-01, 1.89534d-01,
     8  1.92882d-01, 1.95233d-01, 1.97513d-01, 2.01368d-01, 2.03542d-01,
     9  2.05148d-01, 2.06609d-01, 2.06807d-01, 2.12135d-01, 2.17044d-01,
     1  2.15456d-01, 2.19293d-01, 2.22212d-01, 2.22509d-01, 2.24556d-01,
     2  2.26433d-01, 2.29454d-01, 2.30510d-01, 2.31614d-01, 2.32518d-01,
     3  2.34197d-01, 2.37152d-01, 2.38904d-01, 2.42336d-01, 2.41958d-01,
     4  2.44886d-01, 2.46434d-01, 2.48184d-01, 2.48305d-01, 2.50000d-01,
     5  2.52444d-01, 2.53449d-01, 2.54433d-01, 2.56633d-01, 2.56628d-01,
     6  2.59308d-01, 2.59709d-01, 2.61846d-01, 2.62795d-01, 2.63838d-01,
     7  2.65315d-01, 2.67597d-01, 2.67552d-01, 2.68642d-01, 2.70197d-01,
     8  2.71011d-01, 2.72051d-01, 2.72751d-01, 2.74352d-01, 2.73594d-01,
     9  2.74177d-01, 2.75296d-01, 2.74888d-01, 2.77760d-01, 2.79596d-01,
     1  2.78734d-01, 2.79971d-01, 2.79543d-01, 2.80752d-01, 2.79931d-01,
     2  2.81997d-01, 2.82788d-01, 2.82409d-01, 2.83464d-01, 2.83488d-01,
     3  2.84437d-01, 2.86294d-01, 2.86438d-01, 2.85579d-01, 2.87099d-01,
     4  2.85974d-01, 2.85481d-01, 2.86122d-01, 2.87110d-01, 2.86948d-01,
     5  2.88747d-01, 2.91534d-01, 2.89179d-01, 2.91146d-01, 2.89854d-01,
     6  2.90001d-01, 2.90698d-01, 2.91432d-01, 2.92085d-01, 2.93229d-01,
     7  2.93503d-01, 2.92979d-01, 2.92975d-01, 2.91486d-01, 2.92475d-01,
     8  2.90372d-01, 2.91170d-01, 2.94628d-01, 2.94105d-01, 2.94427d-01,
     9  2.96144d-01, 2.97669d-01, 2.95994d-01, 2.96506d-01, 2.97406d-01,
     1  2.97275d-01, 2.98015d-01, 2.97098d-01, 2.99075d-01, 2.99965d-01,
     2  2.99414d-01, 2.98612d-01, 2.99212d-01, 2.99911d-01, 2.99884d-01,
     3  3.00088d-01, 2.99884d-01, 3.00822d-01, 3.00684d-01, 2.99873d-01,
     4  3.01694d-01, 2.99747d-01, 3.01191d-01, 2.98589d-01, 2.98150d-01,
     5  2.99429d-01, 3.00982d-01, 3.02398d-01, 3.03207d-01, 3.02669d-01,
     6  3.02984d-01, 3.02555d-01, 3.02134d-01, 3.06154d-01, 3.05605d-01,
     7  3.07708d-01, 3.08625d-01, 3.08620d-01, 3.08497d-01, 3.07647d-01,
     8  3.08563d-01, 3.09242d-01, 3.08732d-01, 3.10075d-01, 3.09389d-01,
     9  3.09936d-01, 3.09469d-01, 3.10604d-01, 3.10001d-01, 3.11432d-01,
     1  3.09591d-01, 3.11214d-01, 3.11200d-01, 3.12105d-01, 3.12658d-01,
     2  3.12221d-01, 3.12727d-01, 3.13505d-01, 3.12851d-01, 3.13997d-01,
     3  3.14112d-01, 3.13648d-01, 3.13984d-01, 3.14960d-01, 3.14482d-01,
     4  3.15398d-01, 3.15939d-01, 3.16597d-01, 3.16160d-01, 3.14833d-01,
     5  3.16337d-01, 3.16904d-01, 3.16775d-01, 3.17265d-01, 3.17787d-01,
     6  3.17280d-01, 3.16596d-01, 3.19969d-01, 3.18887d-01, 3.19647d-01,
     7  3.20108d-01, 3.19039d-01, 3.21764d-01, 3.21367d-01, 3.22193d-01,
     8  3.22840d-01, 3.23055d-01, 3.23792d-01, 3.23854d-01, 3.24346d-01,
     9  3.24198d-01, 3.24889d-01, 3.22639d-01, 3.26332d-01, 3.26622d-01,
     1  3.25631d-01, 3.27114d-01, 3.27944d-01, 3.29055d-01, 3.26869d-01,
     2  3.26503d-01, 3.21791d-01, 3.29185d-01, 3.28905d-01, 3.31201d-01,
     3  3.29484d-01, 3.29996d-01, 3.22755d-01, 3.26937d-01, 3.32630d-01,
     4  3.31865d-01, 3.27406d-01, 3.34194d-01, 3.34200d-01, 3.33205d-01,
     5  3.23472d-01, 3.35736d-01, 3.31841d-01, 3.36124d-01, 3.35205d-01,
     6  3.35648d-01, 3.36151d-01, 3.36930d-01, 3.35496d-01, 3.38866d-01,
     7  3.38356d-01, 3.36173d-01, 3.18089d-01, 3.40409d-01, 3.34318d-01,
     8  3.42247d-01, 3.40586d-01, 3.40972d-01, 3.41979d-01, 3.42017d-01,
     9  3.25588d-01, 3.43298d-01, 3.40522d-01, 3.43694d-01, 3.41814d-01,
     1  3.42266d-01, 3.41603d-01, 3.39541d-01, 3.43005d-01, 3.40985d-01,
     2  3.49283d-01, 3.51537d-01, 3.49736d-01, 3.51583d-01, 3.54156d-01,
     3  3.53788d-01, 3.48142d-01, 3.47574d-01, 3.16463d-01, 3.56058d-01,
     4  3.60272d-01, 3.59403d-01, 3.60114d-01, 3.60732d-01, 3.57347d-01,
     5  3.64018d-01, 3.52421d-01, 3.50032d-01, 3.66148d-01, 3.57652d-01,
     6  3.68256d-01, 3.67351d-01, 3.52337d-01, 3.70262d-01, 3.69681d-01,
     7  3.68898d-01, 3.69630d-01, 3.35407d-01, 3.67795d-01, 3.72628d-01,
     8  3.63557d-01, 3.27241d-01, 3.24765d-01, 3.77283d-01, 3.79811d-01,
     9  3.79226d-01, 3.51512d-01, 3.75810d-01, 3.83831d-01, 3.84365d-01,
     1  3.85727d-01, 3.85841d-01, 3.86787d-01, 3.87102d-01, 3.88016d-01,
     2  3.88348d-01, 3.89781d-01, 3.90598d-01, 3.89651d-01, 3.89395d-01,
     3  3.48163d-01, 3.89507d-01, 3.93293d-01, 3.94167d-01, 3.94536d-01,
     4  3.95960d-01, 3.96544d-01, 3.92174d-01, 3.97301d-01, 3.99275d-01,
     5  3.98282d-01, 3.98554d-01, 3.99604d-01, 4.00138d-01, 4.00185d-01,
     6  4.01099d-01, 4.02158d-01, 4.02441d-01, 4.01472d-01, 4.00397d-01,
     7  4.00929d-01, 4.01389d-01, 4.01810d-01, 4.02113d-01, 4.01668d-01,
     8  4.00808d-01, 4.01768d-01, 4.02758d-01, 4.02054d-01, 4.01151d-01,
     9  4.01616d-01, 4.02713d-01, 4.02221d-01, 4.01423d-01, 4.01327d-01,
     1  4.01545d-01, 4.01013d-01, 4.00191d-01, 4.00769d-01, 3.99391d-01,
     2  3.98716d-01, 3.97613d-01, 3.97250d-01, 3.95634d-01, 3.94740d-01,
     3  3.92995d-01, 3.90979d-01, 3.88697d-01, 3.87500d-01, 3.84486d-01,
     4  3.82079d-01, 3.78540d-01, 3.74927d-01, 3.70796d-01, 3.65206d-01,
     5  3.59147d-01, 3.52907d-01, 3.43594d-01, 3.34534d-01, 3.22963d-01,
     6  3.08610d-01, 2.93095d-01, 2.73705d-01, 2.54480d-01, 2.28778d-01,
     7  2.02353d-01, 1.71863d-01, 1.40164d-01, 1.07283d-01, 7.64171d-02,
     8  4.85348d-02, 2.65483d-02,
c 618e ((618i for 544)
     1  1.18064d-02, 3.96195d-03, 9.31590d-04, 1.33586d-04, 1.68910d-05,
     2  3.88016d-06, 1.35839d-06, 1.70224d-07, 1.16477d-07, 1.18165d-07,
     3  6.67182d-08, 
     3  3.43718d-08, ! 544
     3  3.04375d-08, 1.00437d-07, 9.64935d-09,
     4  3.73922d-08, 5.20995d-08, 2.52356d-07, 3.82323d-07, 9.30245d-07,
c 618d
     1  1.13937d-06, 3.35725d-06, 3.06037d-06, 1.07964d-05, 1.19932d-05,
     2  1.56271d-05, 1.42216d-05, 2.24995d-05, 2.56584d-05, 2.56466d-05,
     3  2.98927d-05, 2.24908d-05, 2.89944d-05, 2.76832d-05, 2.53499d-05,
     4  2.47704d-05, 2.49142d-05, 2.35110d-05, 2.18623d-05, 2.15711d-05,
     5  1.56927d-05, 1.51727d-05, 1.34081d-05, 1.19108d-05, 8.73713d-06,
     6  7.12784d-06, 6.03832d-06, 5.07512d-06, 4.75506d-06, 3.49469d-06,
     7  2.34757d-06, 1.60646d-06, 1.82173d-06, 9.22930d-07, 9.86541d-07,
c 618h
     1  8.25558d-07, 2.70033d-07, 8.15093d-08, 6.30397d-08, 3.29483d-09,
     2  4.55551d-09, 4.36491d-08, 6.79321d-09, 4.11749d-08, 3.76911d-08,
     3  1.14580d-08, 1.62608d-08,
c 618g (618i for 606, 605, 603)
     1  2.66232d-08, 1.48044d-08, 3.62014d-10, 
     1  1.43935d-08, ! 603
     1  1.47835d-08,
     2  2.11905d-08, 1.59328d-08, ! 605, 606
     2  7.74555d-09, 2.15403d-08, 1.53571d-08,
     3  8.79815d-09, 9.64504d-10,
c 618f
     1  5.54053d-08, 3.00828d-09, 1.22090d-09, 4.43061d-08, 3.95939d-09,
     2  4.13017d-09, 3.69319d-09/
      data defferg_130
     1 /3.58106d-02, 3.65173d-02, 3.74702d-02, 4.04908d-02, 4.25697d-02,
     2  4.48566d-02, 4.94264d-02, 5.82539d-02, 7.46126d-02, 9.12784d-02,
     3  1.09180d-01, 1.26554d-01, 1.46049d-01, 1.68156d-01, 1.88299d-01,
     4  2.04169d-01, 2.12931d-01, 2.22444d-01, 2.28355d-01, 2.36722d-01,
     5  2.42762d-01, 2.49855d-01, 2.55064d-01, 2.60214d-01, 2.65262d-01,
     6  2.71448d-01, 2.78027d-01, 2.83123d-01, 2.85903d-01, 2.90180d-01,
     7  2.92046d-01, 2.94648d-01, 2.97908d-01, 2.99985d-01, 2.99520d-01,
     8  3.02417d-01, 3.03684d-01, 3.07281d-01, 3.08281d-01, 3.08833d-01,
     9  3.10003d-01, 3.10998d-01, 3.12108d-01, 3.13583d-01, 3.14888d-01,
     1  3.15298d-01, 3.16387d-01, 3.16848d-01, 3.18938d-01, 3.20113d-01,
     2  3.22616d-01, 3.24104d-01, 3.25656d-01, 3.27770d-01, 3.27237d-01,
     3  3.29006d-01, 3.30033d-01, 3.31527d-01, 3.34769d-01, 3.36197d-01,
     4  3.33157d-01, 3.38757d-01, 3.38488d-01, 3.43687d-01, 3.41249d-01,
     5  3.45866d-01, 3.52132d-01, 3.42878d-01, 3.60359d-01, 3.60011d-01,
     6  3.63395d-01, 3.58825d-01, 3.85928d-01, 3.85760d-01, 3.95894d-01,
     7  4.01111d-01, 4.01341d-01, 4.02066d-01, 4.00828d-01, 3.99583d-01,
     8  3.98655d-01, 3.96151d-01, 3.94356d-01, 3.92578d-01, 3.89803d-01,
     9  3.86313d-01, 3.82280d-01, 3.78429d-01, 3.76686d-01, 3.73898d-01,
     1  3.72870d-01, 3.72656d-01, 3.72079d-01, 3.70274d-01, 3.68913d-01,
     2  3.66344d-01, 3.65443d-01, 3.61966d-01, 3.57307d-01, 3.52714d-01,
     3  3.45032d-01, 3.20493d-01, 2.60780d-01, 1.74494d-01, 8.75905d-02,
     4  3.30233d-02, 1.07000d-02, 4.42902d-03, 1.45932d-03, 1.73026d-04,
     5  1.25869d-05, 8.88645d-07, 8.64488d-10, 7.58595d-08, 1.44150d-10,
     6  1.26396d-06, 1.00852d-05, 1.46354d-05, 2.42648d-05, 2.84432d-05,
     7  2.91387d-05, 2.74500d-05, 1.94262d-05, 1.45518d-05, 6.91102d-06,
     8  2.39886d-07, 0.00000d+00, 1.75056d-10, 0.00000d+00, 0.00000d+00/
      data defferg_79
     1 /3.66768d-02, 4.03314d-02, 4.42560d-02, 4.90335d-02, 5.53170d-02,
     2  6.54214d-02, 7.63960d-02, 8.93408d-02, 1.06458d-01, 1.25120d-01,
     3  1.36097d-01, 1.44381d-01, 1.50712d-01, 1.51693d-01, 1.54134d-01,
     4  1.63340d-01, 1.77073d-01, 1.90393d-01, 2.10367d-01, 2.26946d-01,
     5  2.35328d-01, 2.44254d-01, 2.53034d-01, 2.64036d-01, 2.72553d-01,
     6  2.80594d-01, 2.87603d-01, 2.93942d-01, 2.99330d-01, 2.99879d-01,
     7  3.02906d-01, 3.06968d-01, 3.07948d-01, 3.09799d-01, 3.14870d-01,
     8  3.22754d-01, 3.30340d-01, 3.41587d-01, 3.51967d-01, 3.64252d-01,
     9  3.69208d-01, 3.91210d-01, 4.01785d-01, 4.02015d-01, 4.01856d-01,
     1  4.00502d-01, 3.97361d-01, 3.91310d-01, 3.86183d-01, 3.80954d-01,
     2  3.75582d-01, 3.73178d-01, 3.70516d-01, 3.62538d-01, 3.50653d-01,
     3  3.30976d-01, 3.05358d-01, 2.70450d-01, 2.29319d-01, 1.72922d-01,
     4  9.35797d-02, 3.99040d-02, 7.32139d-03, 
c 79b
     1  1.31692d-04, 6.71023d-07, 4.49179d-08, 4.93191d-08, 1.06063d-07,
c 79a
     1  4.24651d-06, 1.92089d-05, 2.72137d-05, 2.54627d-05, 1.86661d-05,
     2  5.94181d-06, 1.85191d-06, 2.98500d-07, 1.19682d-08, 2.24840d-09,
     3  1.58193d-08/
      data defferg_70
     1 /3.92186d-02, 4.09754d-02, 4.17774d-02, 4.19817d-02, 4.26587d-02,
     2  4.34603d-02, 4.41075d-02, 4.50021d-02, 4.62566d-02, 4.84322d-02,
     3  5.10573d-02, 5.45110d-02, 6.27426d-02, 7.07590d-02, 7.90664d-02,
     4  8.76861d-02, 9.54740d-02, 1.05037d-01, 1.14324d-01, 1.22715d-01,
     5  1.30722d-01, 1.41153d-01, 1.52005d-01, 1.62806d-01, 1.74103d-01,
     6  1.84911d-01, 1.93746d-01, 2.08285d-01, 2.25240d-01, 2.39472d-01,
     7  2.51692d-01, 2.63062d-01, 2.71885d-01, 2.77990d-01, 2.82894d-01,
     8  2.88165d-01, 2.93465d-01, 2.99164d-01, 3.02453d-01, 3.09371d-01,
     9  3.13573d-01, 3.18020d-01, 3.25077d-01, 3.28179d-01, 3.35593d-01,
     1  3.40970d-01, 3.48667d-01, 3.50134d-01, 3.60363d-01, 3.63760d-01,
     2  3.58547d-01, 3.85619d-01, 3.85803d-01, 3.96586d-01, 4.00607d-01,
     3  4.01465d-01, 4.02144d-01, 3.98861d-01, 3.88362d-01, 3.55269d-01,
     4  2.41799d-01, 3.96478d-02, 2.95653d-06, 3.38369d-06, 2.37586d-05,
     5  3.00989d-06, 8.22849d-08, 2.15862d-08, 0.00000d+00, 5.72340d-09/
      data defferg_241/199*1.d0, 42*0.d0/
      data defferg_44
c deteff_44c
     1 /4.35811d-02, 7.04432d-02, 8.95616d-02, 1.16262d-01, 1.40053d-01,
     2  1.49655d-01, 1.63137d-01, 1.83488d-01, 2.13123d-01, 2.46434d-01,
     3  2.80209d-01, 2.97560d-01, 3.08839d-01, 3.16591d-01, 3.35367d-01,
     4  3.55232d-01,
c deteff_44b
     1  3.71589d-01, 3.90824d-01, 4.01457d-01, 4.01388d-01, 4.02041d-01,
     2  4.02092d-01, 3.98635d-01, 3.84904d-01, 3.41464d-01, 2.17666d-01,
c deteff_44a
     1  8.96920d-02, 5.81784d-02, 3.08729d-02, 7.24834d-03, 2.55363d-04,
     2  8.31058d-06, 1.42383d-06, 3.33029d-07, 2.53152d-07, 3.62246d-06,
     3  1.87875d-05, 3.18992d-05, 2.74157d-05, 1.94631d-05, 6.88356d-06,
     4  4.10450d-07, 7.44531d-08, 5.72773d-09/
c
c ideteff=0/1 use unity/use one of these
      ideteff=0
c
c for cylinders, use total leakage regardless.
      if(calc2d.eq.1)ideteff=0
c
c energy efficiency
c set efficiency to 1 to use total leakage.
      if(ideteff.eq.0)then
        deteff(1:neg)=1.d0
      else if(ideteff.eq.1)then
        write(*,'("warning. setting npod detector efficiency. ",
     1   "not yet a general capability.")')
        write(iuo,'("warning. setting npod detector efficiency. ",
     1   "not yet a general capability.")')
        deteff(1:neg)=0.d0
        if(neg.eq.30)then
          deteff(1:neg)=defferg_30(1:neg)
        else if(neg.eq.618)then
          deteff(1:neg)=defferg_618(1:neg)
        else if(neg.eq.130)then
          deteff(1:neg)=defferg_130(1:neg)
        else if(neg.eq.79)then
          deteff(1:neg)=defferg_79(1:neg)
        else if(neg.eq.70)then
          deteff(1:neg)=defferg_70(1:neg)
        else if(neg.eq.241)then
          deteff(1:neg)=defferg_241(1:neg)
        else if(neg.eq.44)then
          deteff(1:neg)=defferg_44(1:neg)
        else
          write(*,'("error. efficiency group structure not found ",
     1     "in seteff.")')
          write(iuo,'("error. efficiency group structure not found ",
     1     "in seteff.")')
        end if
c
c geometry efficiency for npod centered at 50 cm. includes Cd absorber.
c analytic, using current and isotropic source.
        geomeff=0.049379389742d0
        deteff(1:neg)=deteff(1:neg)*geomeff
c
c       if(neg.eq.79)call john_eff(neg,deteff(1:neg))
c use sean's efficiency for debugging
c       if(neg.eq.44)call sean_eff(neg,deteff(1:neg))
c write mcnp style em card bins
c       write(*,'(7x,1p5e13.5)')0.d0,0.d0,(deteff(ng),ng=neg,1,-1)
c write for plotting
c       write(*,'(1pe14.6)')(deteff(ng),ng=1,neg)
c       do ng=1,neg
c         write(*,'(i3,1p2e14.6)')ng,nsrcf(ng,1),deteff(ng)
c       end do ! ng
c       stop
      end if ! ideteff
      return
      end
c
      subroutine john_eff(neg,deteff)
      implicit none
      integer neg
      real*8 deteff(1:neg),johns(79)
      data johns/
     1 1.7051610d-03, 2.0071152d-03, 2.2009609d-03, 2.4451522d-03,
     1 2.7462559d-03, 3.2402752d-03, 3.8006941d-03, 4.4506544d-03,
     1 5.3206897d-03, 6.2552401d-03, 6.8365684d-03, 7.2263658d-03,
     1 7.5087390d-03, 7.6103545d-03, 7.7295038d-03, 8.1448551d-03,
     1 8.7908349d-03, 9.5207523d-03, 1.0461709d-02, 1.1251192d-02,
     1 1.1646360d-02, 1.2024826d-02, 1.2529366d-02, 1.3030214d-02,
     1 1.3464968d-02, 1.3878283d-02, 1.4255845d-02, 1.4498002d-02,
     1 1.4783310d-02, 1.4859104d-02, 1.5002586d-02, 1.5111171d-02,
     1 1.5166440d-02, 1.5304385d-02, 1.5562772d-02, 1.5946768d-02,
     1 1.6361151d-02, 1.6937698d-02, 1.7391342d-02, 1.7925626d-02,
     1 1.8240084d-02, 1.9313210d-02, 1.9926055d-02, 1.9934334d-02,
     1 1.9791876d-02, 1.9667346d-02, 1.9481073d-02, 1.9157774d-02,
     1 1.8873921d-02, 1.8603274d-02, 1.8352628d-02, 1.8232892d-02,
     1 1.8108307d-02, 1.7784847d-02, 1.7151539d-02, 1.6172872d-02,
     1 1.4872378d-02, 1.3107437d-02, 1.0914995d-02, 8.2316539d-03,
     1 4.6505983d-03, 2.0589998d-03, 4.2524818d-04, 3.5547114d-05,
     1 1.4850722d-05, 2.5780609d-06, 4.5314350d-09, 7.3413397d-09,
     1 1.0255203d-07, 7.0118589d-07, 1.0513825d-06, 8.6917098d-07,
     1 6.0745405d-07, 2.5094035d-07, 2.8035800d-08, 5.1102279d-09,
     1 2.1579838d-09, 2.3242224d-10, 1.8572587d-10/
c
      write(*,'("WARNING. overwriting detector efficiency with ",
     1 "John`s efficiency in john_eff.")')
      write(58,'("WARNING. overwriting detector efficiency with ",
     1 "John`s efficiency in john_eff.")')
      deteff(1:neg)=johns(1:neg)
c
      return
      end
c
      subroutine sean_eff(neg,deteff)
      implicit none
      integer neg
      real*8 deteff(1:neg),seans(44)
      data seans/
     1 1.979414d-03, 3.197403d-03, 3.949018d-03, 5.095881d-03,
     1 6.624835d-03, 6.624835d-03, 7.205446d-03, 8.560206d-03,
     1 8.853613d-03, 1.092521d-02, 1.242343d-02, 1.321527d-02,
     1 1.368626d-02, 1.404432d-02, 1.492397d-02, 1.575714d-02,
     1 1.649294d-02, 1.739104d-02, 1.787779d-02, 1.792347d-02,
     1 1.796879d-02, 1.784399d-02, 1.753298d-02, 1.709590d-02,
     1 1.498632d-02, 9.623822d-03, 2.014962d-03, 2.014962d-03,
     1 2.014962d-03, 1.022083d-03, 2.920357d-05, 2.920357d-05,
     1 2.920357d-05, 2.483468d-09, 2.483468d-09, 8.832349d-08,
     1 6.321708d-07, 9.622501d-07, 7.837169d-07, 5.392458d-07,
     1 2.448035d-07, 4.391965d-09, 3.821169d-09, 1.123566d-10/
c
      write(*,'("WARNING. overwriting detector efficiency with ",
     1 "Sean`s efficiency in sean_eff.")')
      write(58,'("WARNING. overwriting detector efficiency with ",
     1 "Sean`s efficiency in sean_eff.")')
      deteff(1:neg)=seans(1:neg)
c
      return
      end

